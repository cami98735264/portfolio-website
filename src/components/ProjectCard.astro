---
import { Image } from "astro:assets";
import languages from "../data/languages.js";
import { Icon } from "astro-icon/components";
import Globe from "../icons/Globe.astro";
const currentLanguage =
    Astro.url.searchParams.get("lang") === "en" ? "en" : "es";
const { title, description, github_urls, live_url, images, alt, projectType, technologies } = Astro.props;
let project = null;
switch (projectType) {
    case 1:
        project = languages[currentLanguage].projects.projectsTypes.personal;
        break;
    case 2:
        project = languages[currentLanguage].projects.projectsTypes.labor;
        break;
    default:
        project = languages[currentLanguage].projects.projectsTypes.personal;
        break;
}
---

<div class="project__card">
    <div class="swiper">
        <div class="swiper-wrapper">
            {
                images.map((image) => {
                    return (
                        <a
                            href={image.url}
                            class="swiper-slide"
                        >
                            <Image
                                loading="eager"
                                width={300}
                                height={300}
                                src={image.url}
                                alt={image.alt}
                            />
                        </a>
                    );
                })
            }
        </div>
        <div class="swiper-button-next"></div>
        <div class="swiper-button-prev"></div>
        <div class="swiper-pagination"></div>
    </div>
    <div class="project__card__body">
        <div>
            <div class="project__card__header">
                <h3 class="project__card__title">{title}</h3>
                <p class="project__card__subtitle">{project}</p>
            </div>
            <div class="project__card__description">
                <p>{description}</p>
                <div class="project__card__links">
                    <a class="github__icon" data-links={JSON.stringify(github_urls)}>
                        <Icon size={20} name="simple-icons:github" />
                    </a>
                    <a class="live__icon" data-live-url>
                        <Globe size={20} />
                    </a>
                </div>
            </div>
        </div>
        <div class="project__card__tecnologies">
            {technologies.map((technology) => (
                <Icon size={20} name={`simple-icons:${technology}`} />
            ))}
        </div>
    </div>
</div>
<style>
    .project__card {
        background-color: #000634;
        display: flex;
        flex-direction: column;
        gap: 10px;
        padding: 15px;
        width: 350px;
        border-radius: 10px;
        box-shadow: rgba(3, 102, 214, 0.3) 0px 0px 0px 3px;
        
    }
    .project__card__body {
        display: flex;
        flex-direction: column;
        gap: 10px;
        flex-grow: 1;
        min-height: 350px;
        justify-content: space-between;
    }

    /* change scrollbar style */
    .project__card__description p::-webkit-scrollbar {
        width: 5px;
    }
    .project__card__description p::-webkit-scrollbar-thumb {
        background-color: #bdbdbd;
        border-radius: 10px;
    }
    .project__card__description p::-webkit-scrollbar-track {
        background-color: #000634;
    }
    .project__card__description p {
        color: #bdbdbd;
        font-size: clamp(1rem, 2vw, 0.9rem);
        line-height: 1.2;
    }
    .project__card__header {
        display: flex;
        flex-direction: column;
        gap: 4px;
    }
    .project__card__title {
        color: #fff;
        font-size: clamp(1.6rem, 2vw, 1.7rem);
        line-height: 1.1;
    }
    .project__card__subtitle {
        color: #999898;
        font-size: clamp(0.9rem, 2vw, 0.9rem);
    }
    [data-icon="simple-icons:vercel"] {
        color: #000;
    }
    .project__card__description p {
        display: inline-block;
        min-height: 120px;
        max-height: 150px;
        overflow-y: auto;
    }
    .project__card__description {
        margin-top: 20px;
        display: flex;
        flex-direction: column;
        gap: 15px;
    }
    .project__card__links {
        display: flex;
        gap: 5px;
    }
    .project__card__tecnologies {
        /* align to right */
        margin-top: 10px;
        display: flex;
        gap: 5px;
        justify-content: flex-end;
    }
    .project__card__links a {
        display: flex;
        align-items: center;
        justify-content: center;
        border: none;
        border-radius: 10px;
        color: #bdbdbd;
        cursor: pointer;
        width: 100%;
        padding: 13px;
        transition: background-color 0.5s;
    }
    .project__card__links .live__icon:hover {
        background-color: #2d1d88;
    }
    .project__card__links .github__icon:hover {
        background-color: #000;
    }
    .github__icon {
        background-color: #180000;
    }
    .live__icon {
        background-color: #462dd5;
    }
    .swiper {
        width: 100%;
        height: 300px;
    }
    .github__icon {
        color: #fff;
        padding: 20px;
    }
    .project__card img {
        border-radius: 10px;
        width: 100%;
        height: 300px;
        object-fit: cover;
    }
    @media (width <= 779px) {
        .project__card__links {
            flex-direction: column;
        }
    }
</style>

<script>
    import Swiper from 'swiper';
    import {Navigation} from 'swiper/modules'
    import {Pagination} from 'swiper/modules'
    // import Swiper and modules styles
    import "swiper/css";
    import "swiper/css/navigation";
    import "swiper/css/pagination";
    import PhotoSwipeLightbox from "photoswipe/lightbox";
    import "photoswipe/style.css";
    import Swal from 'sweetalert2'

import languages from "../data/languages";

    const swiper = new Swiper(".swiper", {
        modules: [Navigation, Pagination],
        pagination: {
        el: ".swiper-pagination",
        type: "progressbar",
      },
      navigation: {
        nextEl: ".swiper-button-next",
        prevEl: ".swiper-button-prev",
      },
    });

    const lightbox = new PhotoSwipeLightbox({
        gallery: ".swiper-wrapper",
        children: "a",
        pswpModule: () => import("photoswipe"),
    });

    lightbox.init();
    /* create a function to show a sweet alert with two buttons based on an array like: { backend: "https://github.com/...", frontend: "..."} */
    function showToast(links) {
        Swal.fire({
            /* transparent background */
            background: "rgba(0, 0, 0, 0.5)",
            confirmButtonColor: "#00BCD4",
            denyButtonColor: "#37474F",
            showDenyButton: true,
            showCancelButton: false,
            confirmButtonText: `Frontend`,
            denyButtonText: `Backend`,
        }).then((result) => {
            if (result.isConfirmed) {
                window.open(links.frontend, "_blank");
            } else if (result.isDenied) {
                window.open(links.backend, "_blank");
            }
        });
    }
    /* add event listener to the github icon class */
    document.querySelectorAll(".github__icon").forEach((element) => {
        element.addEventListener("click", (event) => {
            const links = JSON.parse(event.target.dataset.links);
            showToast(links);
        });
    });
    /* add event listener to the live icon class */
    document.querySelectorAll(".live__icon").forEach((element) => {
        element.addEventListener("click", (event) => {
            const live_url = event.target.dataset.liveUrl;
            window.open(live_url, "_blank");
        });
    });
</script>
